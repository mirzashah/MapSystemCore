#include <XYPoint.h>

/**************************************************/
CXYPoint::CXYPoint()
/**************************************************/
{
	X(0.0);
	Y(0.0);
	Z(0.0);
}

/**************************************************/
CXYPoint::CXYPoint(double x, double y, double z)
/**************************************************/
{
	X(x);
	Y(y);
	Z(z);
}


/**************************************************/
CXYPoint::~CXYPoint()
/**************************************************/
{
}

/**************************************************/
bool CXYPoint::operator == (const CXYPoint& p) const
/**************************************************/
{
    return (p.X()==X() && p.Y()==Y() && p.Z()==Z());
}

/**************************************************/
bool CXYPoint::operator != (const CXYPoint& p) const
/**************************************************/
{
    return (!((*this)==p));
}


/**************************************************/
double CXYPoint::X() const
/**************************************************/
{
	return (_x);
}

/**************************************************/
MAP_SYSTEM_RC CXYPoint::X(double x)
/**************************************************/
{
	_x = x;
	return (VALID);
}

/**************************************************/
double CXYPoint::Y() const
/**************************************************/
{
	return (_y);
}

/**************************************************/
MAP_SYSTEM_RC CXYPoint::Y(double y)
/**************************************************/
{
	_y = y;
	return (VALID);
}

/**************************************************/
double CXYPoint::Z() const
/**************************************************/
{
	return (_z);
}

/**************************************************/
MAP_SYSTEM_RC CXYPoint::Z(double z)
/**************************************************/
{
	_z = z;
	return (VALID);
}
